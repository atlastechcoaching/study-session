name: Terraform Destroy # Gives the workflow a name

on: # Defines the event that triggers the workflow
  workflow_dispatch: # Allows manual triggering of the workflow

jobs: # Groups steps into a job
  terraform: # Name of the job
    runs-on: ubuntu-latest # Runs on an Ubuntu virtual machine

    steps: # List of steps to execute in this job
    - name: Checkout code # Downloads the repository code
      uses: actions/checkout@v2 # Uses a prebuilt GitHub Action to fetch the code

    - name: Set up Terraform # Installs Terraform for the workflow
      uses: hashicorp/setup-terraform@v1 # Uses HashiCorp's Terraform setup Action
      with:
        terraform_version: 1.1.0 # Specifies the Terraform version to install

    - name: Configure AWS credentials # Sets up AWS access for Terraform
      uses: aws-actions/configure-aws-credentials@v1 # Uses a prebuilt Action to set AWS credentials
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} # AWS access key (stored securely in GitHub Secrets)
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # AWS secret key (stored securely in GitHub Secrets)
        aws-region: us-west-1 # Specifies the AWS region to use

    - name: Terraform Init # Initializes Terraform in the specified directory
      id: Init # Gives the step an ID for reference
      run: terraform init # Runs Terraform init command to set up the working directory
      working-directory: Terraform # Points to the Terraform directory in the repo

    - name: Terraform Destroy # Destroys the infrastructure managed by Terraform
      id: Destroy # Gives the step an ID for reference
      run: terraform destroy -auto-approve # Runs Terraform destroy to remove resources without manual confirmation
      working-directory: Terraform # Points to the Terraform directory in the repo
